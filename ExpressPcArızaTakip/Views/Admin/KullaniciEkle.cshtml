@using ExpressPcArızaTakip.Models.Entity
@model List<User>

@{
    ViewBag.Title = "KullaniciEkle";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";

}
<br />
<div class="d-flex justify-content-center" style="margin-bottom:5px;">
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#userModal">
        Kullanıcı Ekle
    </button>
</div>

<!-- Kullanıcı Listesi -->
<table class="table table-striped table-bordered table-hover table-condensed" id="myTable">
    <thead>
        <tr>
            <th><i class="fas fa-user"></i> Kullanıcı</th>
            <th><i class="fas fa-user-tag"></i> Kullanıcı Adı</th>
            <th><i class="fas fa-key"></i> Şifre</th>
            <th><i class="fas fa-shield-alt"></i> Yetkisi</th>
            <th><i class="fas fa-map-marker-alt"></i>Şirket</th>
            <th><i class="fas fa-trash-alt"></i> SİL</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var ktgr in Model)
        {
            <tr>
                <td>@ktgr.Users</td>
                <td>@ktgr.UserName</td>
                <td>@ktgr.Password</td>
                <td>@ktgr.Role.Roles</td>
                <td>@ktgr.Company.Companies</td>
                <td>
                    <button class="btn btn-danger delete-button" data-id="@ktgr.Id">Sil</button>
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="modal fade" id="userModal" tabindex="-1" role="dialog" aria-labelledby="userModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="userModalLabel">Yeni Kullanıcı Ekle</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Kapat">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form id="userForm" action="@Url.Action("KullaniciEkle", "Admin")" method="post">
                <div class="modal-body">
                    <div class="form-group">
                        <label for="username">Kullanıcı</label>
                        <input type="text" class="form-control" id="Users" name="Users" required>
                    </div>
                    <div class="form-group">
                        <label for="username">Kullanıcı Adı</label>
                        <input type="text" class="form-control" id="username" name="UserName" required>
                    </div>
                    <div class="form-group">
                        <label for="password">Şifre</label>
                        <input type="password" class="form-control" id="password" name="Password" required>
                    </div>
                    <div class="form-group">
                        <label for="roleId">Yetki</label>
                        <select class="form-control" id="roleId" name="RoleId">
                            @foreach (var role in ViewBag.Roles)
                            {
                                <option value="@role.Id">@role.Roles</option>
                            }
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="companyId">Şirket</label>
                        <select class="form-control" id="companyId" name="CompanyId">
                            @foreach (var company in ViewBag.Companies)
                            {
                                <option value="@company.Id">@company.Companies</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Kapat</button>
                    <button type="submit" class="btn btn-primary">Kaydet</button>
                </div>
            </form>
        </div>
    </div>
</div>





<script>
    $(document).ready(function () {
        // .delete-button sınıfına tıklama olayını ekleyin
        $('.delete-button').on('click', function () {
            var userId = $(this).data('id'); // Kullanıcı ID'sini alın
            var button = $(this); // Butonu referans alın

            // Silme işlemi için SweetAlert ile kullanıcıdan onay alın
            Swal.fire({
                title: 'Emin misiniz?',
                text: "Bu kullanıcıyı silmek istiyor musunuz?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Evet, sil',
                cancelButtonText: 'İptal'
            }).then((result) => {
                if (result.isConfirmed) {
                    // AJAX ile silme isteği gönder
                    $.ajax({
                        url: '/Admin/SIL1/' + userId,
                        method: 'POST',
                        success: function (response) {
                            if (response.success) {
                                Swal.fire({
                                    title: 'Başarılı!',
                                    text: response.message,
                                    icon: 'success',
                                    confirmButtonText: 'Tamam'
                                }).then(() => {
                                    button.closest('tr').remove(); // Satırı tablodan kaldır
                                });
                            } else {
                                Swal.fire({
                                    title: 'Hata!',
                                    text: response.message,
                                    icon: 'error',
                                    confirmButtonText: 'Tamam'
                                });
                            }
                        },
                        error: function () {
                            Swal.fire({
                                title: 'Hata!',
                                text: 'Silme işlemi sırasında bir hata oluştu.',
                                icon: 'error',
                                confirmButtonText: 'Tamam'
                            });
                        }
                    });
                }
            });
        });
    });
    function validateForm(event) {
        // Form alanlarını kontrol et
        var problemUserId = document.querySelector("#ProblemUserId").value;
        var problemReasonId = document.querySelector("#ProblemReasonId").value;
        var problemSituationId = document.querySelector("#ProblemSituationId").value;
        var problemPlaceId = document.querySelector("#ProblemPlaceId").value;
        var problemDetails = document.querySelector("#ProblemDetails").value.trim();

        // Hatalı alanı belirlemek için her bir alanı ayrı ayrı kontrol et
        if (problemUserId === "0") {
            Swal.fire({
                icon: 'warning',
                title: 'Eksik Bilgi!',
                text: 'Lütfen bir kişi seçiniz.',
                confirmButtonText: 'Tamam'
            });
            return false; // Form gönderimini engelle
        }
        if (problemReasonId === "0") {
            Swal.fire({
                icon: 'warning',
                title: 'Eksik Bilgi!',
                text: 'Lütfen bir arıza sebebi seçiniz.',
                confirmButtonText: 'Tamam'
            });
            return false; // Form gönderimini engelle
        }
        if (problemSituationId === "0") {
            Swal.fire({
                icon: 'warning',
                title: 'Eksik Bilgi!',
                text: 'Lütfen bir arıza durumu seçiniz.',
                confirmButtonText: 'Tamam'
            });
            return false; // Form gönderimini engelle
        }
        if (problemPlaceId === "0") {
            Swal.fire({
                icon: 'warning',
                title: 'Eksik Bilgi!',
                text: 'Lütfen bir arıza yeri seçiniz.',
                confirmButtonText: 'Tamam'
            });
            return false; // Form gönderimini engelle
        }
        if (problemDetails === "") {
            Swal.fire({
                icon: 'warning',
                title: 'Eksik Bilgi!',
                text: 'Lütfen arıza ile ilgili detayları giriniz.',
                confirmButtonText: 'Tamam'
            });
            return false; // Form gönderimini engelle
        }

        // Eğer tüm alanlar doluysa, form gönderimine izin ver
        return true;
    }
    $('#userForm').on('submit', function (event) {
        event.preventDefault();

        $.ajax({
            url: $(this).attr('action'),
            type: 'POST',
            data: $(this).serialize(),
            success: function (response) {
                $('#userModal').modal('hide');
                location.reload(); // Sayfayı yenile
            },
            error: function (xhr) {
                alert("Bir hata oluştu: " + xhr.responseText);
            }
        });
    });



</script>

